// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/wilomendez/Onboarding/create-contact-aws-lambda/controllers (interfaces: ICreateContactHandler)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/wilomendez/Onboarding/create-contact-aws-lambda/models"
)

// MockICreateContactHandler is a mock of ICreateContactHandler interface.
type MockICreateContactHandler struct {
	ctrl     *gomock.Controller
	recorder *MockICreateContactHandlerMockRecorder
}

// MockICreateContactHandlerMockRecorder is the mock recorder for MockICreateContactHandler.
type MockICreateContactHandlerMockRecorder struct {
	mock *MockICreateContactHandler
}

// NewMockICreateContactHandler creates a new mock instance.
func NewMockICreateContactHandler(ctrl *gomock.Controller) *MockICreateContactHandler {
	mock := &MockICreateContactHandler{ctrl: ctrl}
	mock.recorder = &MockICreateContactHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICreateContactHandler) EXPECT() *MockICreateContactHandlerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockICreateContactHandler) Create(arg0 context.Context, arg1 models.Request) (models.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(models.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockICreateContactHandlerMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockICreateContactHandler)(nil).Create), arg0, arg1)
}
